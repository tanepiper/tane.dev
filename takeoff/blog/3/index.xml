<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Takeoff on tane.dev</title><link>https://tane.dev/takeoff/</link><description>Recent content in Takeoff on tane.dev</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>This work is copyright Tane Piper</copyright><lastBuildDate>Wed, 27 Sep 2017 23:59:59 +0100</lastBuildDate><atom:link href="https://tane.dev/takeoff/index.xml" rel="self" type="application/rss+xml"/><item><title>RxJS Primitives is now RxJS Ninja</title><link>https://tane.dev/2020/11/rxjs-primitives-is-now-rxjs-ninja/</link><pubDate>Mon, 23 Nov 2020 00:01:00 +0100</pubDate><guid>https://tane.dev/2020/11/rxjs-primitives-is-now-rxjs-ninja/</guid><description>&lt;p>&lt;img src="https://raw.githubusercontent.com/rxjs-ninja/rxjs-ninja/main/assets/logo.png" alt="RxJS Ninja Logo is a Ninja jumping over a crescent moon">&lt;/p>
&lt;p>Today I&amp;rsquo;ve re-released RxJS Primitives as &lt;a href="https://rxjs.ninja" target="_blank">RxJS Ninja&lt;/a>
. The new libraries have been published as the same last versions
under their old name, so it&amp;rsquo;s easy to migrate to the new version - all now published under &lt;code>@rxjs-ninja&lt;/code> instead of &lt;code>@tinynodes&lt;/code>
(a deprecation notice has also been left the old packages).&lt;/p></description></item><item><title>New RxJS Primitives release, new operators + Typescript 4</title><link>https://tane.dev/2020/11/new-rxjs-primitives-release-new-operators--typescript-4/</link><pubDate>Wed, 18 Nov 2020 11:30:00 +0100</pubDate><guid>https://tane.dev/2020/11/new-rxjs-primitives-release-new-operators--typescript-4/</guid><description>&lt;p>This week I released new versions of my &lt;a href="https://github.com/ReactiveX/rxjs" target="_blank">RxJS&lt;/a>
libraries in &lt;a href="https://github.com/tanepiper/rxjs-primitives" target="_blank">rxjs-primitives&lt;/a>
.
Since it&amp;rsquo;s released I&amp;rsquo;ve added a few new utility operators. Some of these have been out for a while since I originally wrote about the release, so I&amp;rsquo;ve highlighted them here as they may be useful to some developers.&lt;/p>
&lt;p>You can check out the &lt;a href="https://tanepiper.github.io/rxjs-primitives" target="_blank">full docs here&lt;/a>
.&lt;/p>
&lt;h3 id="typescript-4">Typescript 4&lt;/h3>
&lt;p>Upgrading to Typescript 4 has allowed the removal of &lt;a href="http://tane.dev/2020/05/polymorphic-typescript-function-overloading-with-rest-parameters/" target="_blank">polymorphic functions&lt;/a>
in place of
&lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html" target="_blank">Vardic Tuple Types&lt;/a>
and is why there is a major bump on all packages.&lt;/p></description></item><item><title>Polymorphic TypeScript - Function overloading with rest parameters</title><link>https://tane.dev/2020/05/polymorphic-typescript-function-overloading-with-rest-parameters/</link><pubDate>Tue, 12 May 2020 08:30:00 +0100</pubDate><guid>https://tane.dev/2020/05/polymorphic-typescript-function-overloading-with-rest-parameters/</guid><description>&lt;p>Recently in &lt;a href="https://tanepiper.github.io/rxjs-primitives/" target="_blank">RxJS Primitives&lt;/a>
I encountered a situation where
one of the methods - &lt;a href="https://tanepiper.github.io/rxjs-primitives/modules/string.html#concat" target="_blank">concat&lt;/a>
was initially
designed to take an argument list of strings and in the method used rest (&lt;code>...args&lt;/code>) parameters, mimicking the signature
and passing them to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat" target="_blank">String.prototype.concat&lt;/a>
&lt;/p>
&lt;blockquote>
&lt;p>I&amp;rsquo;ve created a &lt;a href="https://stackblitz.com/edit/function-overloading-with-rest" target="_blank">StackBlitz Project&lt;/a>
with the code for each
step that can be followed along.&lt;/p>&lt;/blockquote>
&lt;p>I wanted to refactor it to support an array of strings, but found that in the current implementation
&lt;a href="https://stackblitz.com/edit/function-overloading-with-rest?file=concat-overload-1.ts" target="_blank">this is not possible&lt;/a>
and throws a TypeScript
error:&lt;/p></description></item><item><title>Publishing NPM Libraries using NX and Github Actions</title><link>https://tane.dev/2020/05/publishing-npm-libraries-using-nx-and-github-actions/</link><pubDate>Thu, 07 May 2020 20:30:00 +0100</pubDate><guid>https://tane.dev/2020/05/publishing-npm-libraries-using-nx-and-github-actions/</guid><description>&lt;p>This week I released version 1.0 of &lt;a href="https://tanepiper.github.io/rxjs-primitives/" target="_blank">RxJS Primitives&lt;/a>
to NPM - but the
journey to get there was not as easy as I hoped.&lt;/p>
&lt;p>In the past I&amp;rsquo;ve used &lt;a href="https://circleci.com/" target="_blank">CircleCI&lt;/a>
and at work I use &lt;a href="https://www.jenkins.io/" target="_blank">Jenkins&lt;/a>
but with this project I wanted to try out &lt;a href="https://github.com/features/actions" target="_blank">Github Actions&lt;/a>
.&lt;/p>
&lt;p>After some trial an error (and many failed builds) I managed to get the workflow working, I&amp;rsquo;ve decided to share here the
steps taken to hopefully save you from the same pain.&lt;/p></description></item><item><title>RxJS Primitives - Operators for mutating and filtering primitives</title><link>https://tane.dev/2020/04/rxjs-primitives-operators-for-mutating-and-filtering-primitives/</link><pubDate>Thu, 23 Apr 2020 11:30:00 +0100</pubDate><guid>https://tane.dev/2020/04/rxjs-primitives-operators-for-mutating-and-filtering-primitives/</guid><description>&lt;p>Today I&amp;rsquo;ve published a new set of libraries to NPM - &lt;a href="https://github.com/tanepiper/rxjs-primitives" target="_blank">RxJS Primitives&lt;/a>
.&lt;/p>
&lt;p>These are based on some operators I&amp;rsquo;ve collected over the last year, and some additional ones I&amp;rsquo;ve started adding.
Most are based around ECMASCript objects such as &lt;code>String&lt;/code>, &lt;code>Number&lt;/code> and &lt;code>Boolean&lt;/code> but also includes some useful
utility operators.&lt;/p>
&lt;p>Over the coming weeks I&amp;rsquo;ll add more operators, both based on ECMAScript methods and custom functions that I have found useful.&lt;/p></description></item></channel></rss>